process.roles=broker,controller

node.id= {{ node_id }}
KAFKA_CLUSTER_ID={{ KAFKA_CLUSTER_ID }}

controller.quorum.bootstrap.servers={% for i in groups['all'] %}{{ hostvars[i]['inventory_hostname'] }}:{{ CONTROLLER_PORT }}{% if not loop.last %}, {% endif %}{% endfor %}

controller.quorum.voters={% for i in groups['all'] %}{{ loop.index }}@{{ hostvars[i]['inventory_hostname'] }}:{{ CONTROLLER_PORT }}{% if not loop.last %}, {% endif %}{% endfor %}

controller.listener.names=CONTROLLER

socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600

num.partitions=6
num.recovery.threads.per.data.dir=1
num.network.threads=3
num.io.threads=8

offsets.topic.replication.factor=2
share.coordinator.state.topic.replication.factor=1
share.coordinator.state.topic.min.isr=1
transaction.state.log.replication.factor=2
transaction.state.log.min.isr=1

log.retention.hours=168
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000
log.dirs=/var/log/kraft-combined-logs

# ACL
authorizer.class.name=org.apache.kafka.metadata.authorizer.StandardAuthorizer
allow.everyone.if.no.acl.found=false
super.users=User:{{ SASL_USERNAME }}

# Listeners
inter.broker.listener.name=SASL_SSL
listener.name.controller.scram-sha-256.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="{{ SASL_USERNAME }}" password="{{ SASL_PASSWORD }}";
listeners={% for i in groups['all'] %}PLAINTEXT://{{ hostvars[i]['inventory_hostname'] }}:{{ BROKER_PORT }},CONTROLLER://{{ hostvars[i]['inventory_hostname'] }}:{{ CONTROLLER_PORT }}{% if not loop.last %}, {% endif %}{% endfor %}
listener.security.protocol.map=SASL_SSL:SASL_SSL,CONTROLLER:SASL_SSL
advertised.listeners={% for i in groups['all'] %}PLAINTEXT://{{ hostvars[i]['inventory_hostname'] }}:{{ BROKER_PORT }}

# SASL & SSL configuration
sasl.enabled.mechanisms=SCRAM-SHA-256
sasl.mechanism.inter.broker.protocol=SCRAM-SHA-256
sasl.mechanism.controller.protocol=SCRAM-SHA-256

ssl.keystore.location=/opt/kafka/certs/broker1.local.keystore.jks
ssl.keystore.password=123456
ssl.key.password=123456
ssl.truststore.location=/opt/kafka/certs/kafka.truststore.jks
ssl.truststore.password=123456
ssl.endpoint.identification.algorithm=